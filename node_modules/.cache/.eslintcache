[{"C:\\Users\\rilyr\\Documents\\KodeGo\\MyCodingJournal\\myjournal\\src\\index.js":"1","C:\\Users\\rilyr\\Documents\\KodeGo\\MyCodingJournal\\myjournal\\src\\App.js":"2","C:\\Users\\rilyr\\Documents\\KodeGo\\MyCodingJournal\\myjournal\\src\\Journal.jsx":"3"},{"size":228,"mtime":1692438501399,"results":"4","hashOfConfig":"5"},{"size":159,"mtime":1692438501396,"results":"6","hashOfConfig":"5"},{"size":3886,"mtime":1692438501397,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q2iqmt",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"C:\\Users\\rilyr\\Documents\\KodeGo\\MyCodingJournal\\myjournal\\src\\index.js",[],[],"C:\\Users\\rilyr\\Documents\\KodeGo\\MyCodingJournal\\myjournal\\src\\App.js",[],[],"C:\\Users\\rilyr\\Documents\\KodeGo\\MyCodingJournal\\myjournal\\src\\Journal.jsx",["18"],[],"import React, { useRef, useState, useEffect } from 'react';\r\nimport background from \"./thinkGreen.jpg\";\r\nimport \"./journal.css\";\r\n\r\nconst Journal = () => {\r\n    const dateRef = useRef(null);\r\n    const dateRef2 = useRef(null);\r\n    const thoughtRef = useRef(null);\r\n    const taskRef = useRef(null);\r\n\r\n    const [myThought, setMyThought] = useState([]);\r\n    const [myTask, setMyTask] = useState([]);\r\n    \r\n    const handleThoughtSubmit = (e) => {\r\n        e.preventDefault();\r\n        const thoughtObject = {\r\n            id: Date.now(),\r\n            date: dateRef2.current.value,\r\n            thought: thoughtRef.current.value,\r\n        };\r\n        console.log(\"Thought submitted:\", thoughtObject); // Add this line\r\n        setMyThought([...myThought, thoughtObject]);\r\n        dateRef2.current.value = '';\r\n        thoughtRef.current.value = '';\r\n    };\r\n   \r\n    useEffect(() => {\r\n        localStorage.setItem('MyThoughts', JSON.stringify(myThought));\r\n    }, [myThought]);\r\n\r\n    const handleTaskSubmit = (e) => {\r\n        e.preventDefault();\r\n        const taskObject = {\r\n            id: Date.now(),\r\n            date: dateRef.current.value,\r\n            task: taskRef.current.value,\r\n        };\r\n        setMyTask([...myTask, taskObject]);\r\n        dateRef.current.value = '';\r\n        taskRef.current.value = '';\r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('MyTasks', JSON.stringify(myTask));\r\n    }, [myTask]);\r\n\r\n    const handleDelete = (id, isThought) => {\r\n        if (isThought) {\r\n            setMyThought(myThought.filter(item => item.id !== id));\r\n        } else {\r\n            setMyTask(myTask.filter(item => item.id !== id));\r\n        }\r\n    };\r\n    \r\n\r\n    const renderEntries = (entries, isThought) => (\r\n        <div className='messageContainer2'>\r\n            {entries.map(entry => (\r\n                <div key={entry.id}>\r\n                    <h4>{entry.date}: {isThought ? entry.thought : entry.task}</h4>\r\n                    <button onClick={() => handleDelete(entry.id, isThought)}>delete</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className='main'>\r\n            <div className='container'>\r\n                <h1 className='title'>My Thoughts Journal</h1>\r\n                <form onSubmit={handleThoughtSubmit}>\r\n                    <label className='firstLabel'>Thoughts for the Day</label>\r\n                    <input className='date' type=\"date\" ref={dateRef2} />\r\n                    <textarea className='message' rows=\"2\" ref={thoughtRef} placeholder=\"What's on your mind?\" />\r\n                    <div className='button'>\r\n                        <input type=\"submit\" value='Save' />\r\n                        <input type=\"reset\" value='Clear' />\r\n                    </div>\r\n                </form>\r\n                <div className='messageContainer'>\r\n                    <h4>Thoughts for the Day</h4>\r\n                    {renderEntries(myThought, true)}\r\n                </div>\r\n            </div>\r\n\r\n            <div className='container'>\r\n                <h1 className='title'>My Tasks Journal</h1>\r\n                <form onSubmit={handleTaskSubmit}>\r\n                    <label className='firstLabel'>Tasks</label>\r\n                    <input className='date' type=\"date\" ref={dateRef} />\r\n                    <textarea className='message' rows=\"2\" ref={taskRef} placeholder=\"What do you need to do?\" />\r\n                    <div className='button'>\r\n                        <input type=\"submit\" value='Save' />\r\n                        <input type=\"reset\" value='Clear' />\r\n                    </div>\r\n                </form>\r\n                <div className='messageContainer'>\r\n                    <h4>Tasks</h4>\r\n                    {renderEntries(myTask, false)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Journal;",{"ruleId":"19","severity":1,"message":"20","line":2,"column":8,"nodeType":"21","messageId":"22","endLine":2,"endColumn":18},"no-unused-vars","'background' is defined but never used.","Identifier","unusedVar"]