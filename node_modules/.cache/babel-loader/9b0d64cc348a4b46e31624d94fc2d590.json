{"ast":null,"code":"import _toConsumableArray from\"C:/Users/rilyr/Documents/KodeGo/MyCodingJournal/myjournal/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/rilyr/Documents/KodeGo/MyCodingJournal/myjournal/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useRef,useState,useEffect}from'react';import background from\"./thinkGreen.jpg\";import\"./journal.css\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Journal=function Journal(){var dateRef=useRef(null);var dateRef2=useRef(null);var thoughtRef=useRef(null);var taskRef=useRef(null);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),myThought=_useState2[0],setMyThought=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),myTask=_useState4[0],setMyTask=_useState4[1];var handleThoughtSubmit=function handleThoughtSubmit(e){e.preventDefault();var thoughtObject={id:Date.now(),date:dateRef2.current.value,thought:thoughtRef.current.value};console.log(\"Thought submitted:\",thoughtObject);// Add this line\nsetMyThought([].concat(_toConsumableArray(myThought),[thoughtObject]));dateRef2.current.value='';thoughtRef.current.value='';};useEffect(function(){localStorage.setItem('MyThoughts',JSON.stringify(myThought));},[myThought]);var handleTaskSubmit=function handleTaskSubmit(e){e.preventDefault();var taskObject={id:Date.now(),date:dateRef.current.value,task:taskRef.current.value};setMyTask([].concat(_toConsumableArray(myTask),[taskObject]));dateRef.current.value='';taskRef.current.value='';};useEffect(function(){localStorage.setItem('MyTasks',JSON.stringify(myTask));},[myTask]);var handleDelete=function handleDelete(id,isThought){if(isThought){setMyThought(myThought.filter(function(item){return item.id!==id;}));}else{setMyTask(myTask.filter(function(item){return item.id!==id;}));}};var renderEntries=function renderEntries(entries,isThought){return/*#__PURE__*/_jsx(\"div\",{className:\"messageContainer2\",children:entries.map(function(entry){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{children:[entry.date,\": \",isThought?entry.thought:entry.task]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleDelete(entry.id,isThought);},children:\"delete\"})]},entry.id);})});};return/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"My Thoughts Journal\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleThoughtSubmit,children:[/*#__PURE__*/_jsx(\"label\",{className:\"firstLabel\",children:\"Thoughts for the Day\"}),/*#__PURE__*/_jsx(\"input\",{className:\"date\",type:\"date\",ref:dateRef2}),/*#__PURE__*/_jsx(\"textarea\",{className:\"message\",rows:\"2\",ref:thoughtRef,placeholder:\"What's on your mind?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"button\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Save\"}),/*#__PURE__*/_jsx(\"input\",{type:\"reset\",value:\"Clear\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"messageContainer\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Thoughts for the Day\"}),renderEntries(myThought,true)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"My Tasks Journal\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleTaskSubmit,children:[/*#__PURE__*/_jsx(\"label\",{className:\"firstLabel\",children:\"Tasks\"}),/*#__PURE__*/_jsx(\"input\",{className:\"date\",type:\"date\",ref:dateRef}),/*#__PURE__*/_jsx(\"textarea\",{className:\"message\",rows:\"2\",ref:taskRef,placeholder:\"What do you need to do?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"button\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Save\"}),/*#__PURE__*/_jsx(\"input\",{type:\"reset\",value:\"Clear\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"messageContainer\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Tasks\"}),renderEntries(myTask,false)]})]})]});};export default Journal;","map":{"version":3,"sources":["C:/Users/rilyr/Documents/KodeGo/MyCodingJournal/myjournal/src/Journal.jsx"],"names":["React","useRef","useState","useEffect","background","Journal","dateRef","dateRef2","thoughtRef","taskRef","myThought","setMyThought","myTask","setMyTask","handleThoughtSubmit","e","preventDefault","thoughtObject","id","Date","now","date","current","value","thought","console","log","localStorage","setItem","JSON","stringify","handleTaskSubmit","taskObject","task","handleDelete","isThought","filter","item","renderEntries","entries","map","entry"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport background from \"./thinkGreen.jpg\";\r\nimport \"./journal.css\";\r\n\r\nconst Journal = () => {\r\n    const dateRef = useRef(null);\r\n    const dateRef2 = useRef(null);\r\n    const thoughtRef = useRef(null);\r\n    const taskRef = useRef(null);\r\n\r\n    const [myThought, setMyThought] = useState([]);\r\n    const [myTask, setMyTask] = useState([]);\r\n    \r\n    const handleThoughtSubmit = (e) => {\r\n        e.preventDefault();\r\n        const thoughtObject = {\r\n            id: Date.now(),\r\n            date: dateRef2.current.value,\r\n            thought: thoughtRef.current.value,\r\n        };\r\n        console.log(\"Thought submitted:\", thoughtObject); // Add this line\r\n        setMyThought([...myThought, thoughtObject]);\r\n        dateRef2.current.value = '';\r\n        thoughtRef.current.value = '';\r\n    };\r\n   \r\n    useEffect(() => {\r\n        localStorage.setItem('MyThoughts', JSON.stringify(myThought));\r\n    }, [myThought]);\r\n\r\n    const handleTaskSubmit = (e) => {\r\n        e.preventDefault();\r\n        const taskObject = {\r\n            id: Date.now(),\r\n            date: dateRef.current.value,\r\n            task: taskRef.current.value,\r\n        };\r\n        setMyTask([...myTask, taskObject]);\r\n        dateRef.current.value = '';\r\n        taskRef.current.value = '';\r\n    };\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('MyTasks', JSON.stringify(myTask));\r\n    }, [myTask]);\r\n\r\n    const handleDelete = (id, isThought) => {\r\n        if (isThought) {\r\n            setMyThought(myThought.filter(item => item.id !== id));\r\n        } else {\r\n            setMyTask(myTask.filter(item => item.id !== id));\r\n        }\r\n    };\r\n    \r\n\r\n    const renderEntries = (entries, isThought) => (\r\n        <div className='messageContainer2'>\r\n            {entries.map(entry => (\r\n                <div key={entry.id}>\r\n                    <h4>{entry.date}: {isThought ? entry.thought : entry.task}</h4>\r\n                    <button onClick={() => handleDelete(entry.id, isThought)}>delete</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className='main'>\r\n            <div className='container'>\r\n                <h1 className='title'>My Thoughts Journal</h1>\r\n                <form onSubmit={handleThoughtSubmit}>\r\n                    <label className='firstLabel'>Thoughts for the Day</label>\r\n                    <input className='date' type=\"date\" ref={dateRef2} />\r\n                    <textarea className='message' rows=\"2\" ref={thoughtRef} placeholder=\"What's on your mind?\" />\r\n                    <div className='button'>\r\n                        <input type=\"submit\" value='Save' />\r\n                        <input type=\"reset\" value='Clear' />\r\n                    </div>\r\n                </form>\r\n                <div className='messageContainer'>\r\n                    <h4>Thoughts for the Day</h4>\r\n                    {renderEntries(myThought, true)}\r\n                </div>\r\n            </div>\r\n\r\n            <div className='container'>\r\n                <h1 className='title'>My Tasks Journal</h1>\r\n                <form onSubmit={handleTaskSubmit}>\r\n                    <label className='firstLabel'>Tasks</label>\r\n                    <input className='date' type=\"date\" ref={dateRef} />\r\n                    <textarea className='message' rows=\"2\" ref={taskRef} placeholder=\"What do you need to do?\" />\r\n                    <div className='button'>\r\n                        <input type=\"submit\" value='Save' />\r\n                        <input type=\"reset\" value='Clear' />\r\n                    </div>\r\n                </form>\r\n                <div className='messageContainer'>\r\n                    <h4>Tasks</h4>\r\n                    {renderEntries(myTask, false)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Journal;"]},"metadata":{},"sourceType":"module"}